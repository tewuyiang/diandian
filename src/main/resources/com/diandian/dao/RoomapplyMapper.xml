<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.diandian.dao.RoomapplyMapper">
  <resultMap id="BaseResultMap" type="com.diandian.model.Roomapply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="typeid" jdbcType="INTEGER" property="typeid" />
    <result column="roomid" jdbcType="INTEGER" property="roomid" />
    <result column="dealresult" jdbcType="INTEGER" property="dealresult" />
    <result column="dealtime" jdbcType="TIMESTAMP" property="dealtime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, typeid, roomid, dealresult, dealtime, remarks
  </sql>
  <select id="selectByExample" parameterType="com.diandian.model.RoomapplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roomapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from roomapply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from roomapply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.diandian.model.RoomapplyExample">
    delete from roomapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.diandian.model.Roomapply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roomapply (typeid, roomid, dealresult, 
      dealtime, remarks)
    values (#{typeid,jdbcType=INTEGER}, #{roomid,jdbcType=INTEGER}, #{dealresult,jdbcType=INTEGER}, 
      #{dealtime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.diandian.model.Roomapply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into roomapply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeid != null">
        typeid,
      </if>
      <if test="roomid != null">
        roomid,
      </if>
      <if test="dealresult != null">
        dealresult,
      </if>
      <if test="dealtime != null">
        dealtime,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="roomid != null">
        #{roomid,jdbcType=INTEGER},
      </if>
      <if test="dealresult != null">
        #{dealresult,jdbcType=INTEGER},
      </if>
      <if test="dealtime != null">
        #{dealtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.diandian.model.RoomapplyExample" resultType="java.lang.Long">
    select count(*) from roomapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update roomapply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.typeid != null">
        typeid = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.roomid != null">
        roomid = #{record.roomid,jdbcType=INTEGER},
      </if>
      <if test="record.dealresult != null">
        dealresult = #{record.dealresult,jdbcType=INTEGER},
      </if>
      <if test="record.dealtime != null">
        dealtime = #{record.dealtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update roomapply
    set id = #{record.id,jdbcType=INTEGER},
      typeid = #{record.typeid,jdbcType=INTEGER},
      roomid = #{record.roomid,jdbcType=INTEGER},
      dealresult = #{record.dealresult,jdbcType=INTEGER},
      dealtime = #{record.dealtime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.diandian.model.Roomapply">
    update roomapply
    <set>
      <if test="typeid != null">
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="roomid != null">
        roomid = #{roomid,jdbcType=INTEGER},
      </if>
      <if test="dealresult != null">
        dealresult = #{dealresult,jdbcType=INTEGER},
      </if>
      <if test="dealtime != null">
        dealtime = #{dealtime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.diandian.model.Roomapply">
    update roomapply
    set typeid = #{typeid,jdbcType=INTEGER},
      roomid = #{roomid,jdbcType=INTEGER},
      dealresult = #{dealresult,jdbcType=INTEGER},
      dealtime = #{dealtime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>