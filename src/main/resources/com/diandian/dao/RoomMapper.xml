<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.diandian.dao.RoomMapper">
  <resultMap id="BaseResultMap" type="com.diandian.model.Room">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rname" jdbcType="VARCHAR" property="rname" />
    <result column="roomnumber" jdbcType="VARCHAR" property="roomnumber" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="personcount" jdbcType="SMALLINT" property="personcount" />
    <result column="distance" jdbcType="DOUBLE" property="distance" />
    <result column="checked" jdbcType="SMALLINT" property="checked" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="del" jdbcType="SMALLINT" property="del" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rname, roomnumber, userid, createtime, personcount, distance, checked, note, 
    del
  </sql>
  <select id="selectByExample" parameterType="com.diandian.model.RoomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.diandian.model.RoomExample">
    delete from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.diandian.model.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room (rname, roomnumber, userid, 
      createtime, personcount, distance, 
      checked, note, del
      )
    values (#{rname,jdbcType=VARCHAR}, #{roomnumber,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{personcount,jdbcType=SMALLINT}, #{distance,jdbcType=DOUBLE}, 
      #{checked,jdbcType=SMALLINT}, #{note,jdbcType=VARCHAR}, #{del,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.diandian.model.Room">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rname != null">
        rname,
      </if>
      <if test="roomnumber != null">
        roomnumber,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="personcount != null">
        personcount,
      </if>
      <if test="distance != null">
        distance,
      </if>
      <if test="checked != null">
        checked,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="del != null">
        del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rname != null">
        #{rname,jdbcType=VARCHAR},
      </if>
      <if test="roomnumber != null">
        #{roomnumber,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="personcount != null">
        #{personcount,jdbcType=SMALLINT},
      </if>
      <if test="distance != null">
        #{distance,jdbcType=DOUBLE},
      </if>
      <if test="checked != null">
        #{checked,jdbcType=SMALLINT},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="del != null">
        #{del,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.diandian.model.RoomExample" resultType="java.lang.Long">
    select count(*) from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update room
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rname != null">
        rname = #{record.rname,jdbcType=VARCHAR},
      </if>
      <if test="record.roomnumber != null">
        roomnumber = #{record.roomnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.personcount != null">
        personcount = #{record.personcount,jdbcType=SMALLINT},
      </if>
      <if test="record.distance != null">
        distance = #{record.distance,jdbcType=DOUBLE},
      </if>
      <if test="record.checked != null">
        checked = #{record.checked,jdbcType=SMALLINT},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.del != null">
        del = #{record.del,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update room
    set id = #{record.id,jdbcType=INTEGER},
      rname = #{record.rname,jdbcType=VARCHAR},
      roomnumber = #{record.roomnumber,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      personcount = #{record.personcount,jdbcType=SMALLINT},
      distance = #{record.distance,jdbcType=DOUBLE},
      checked = #{record.checked,jdbcType=SMALLINT},
      note = #{record.note,jdbcType=VARCHAR},
      del = #{record.del,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.diandian.model.Room">
    update room
    <set>
      <if test="rname != null">
        rname = #{rname,jdbcType=VARCHAR},
      </if>
      <if test="roomnumber != null">
        roomnumber = #{roomnumber,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="personcount != null">
        personcount = #{personcount,jdbcType=SMALLINT},
      </if>
      <if test="distance != null">
        distance = #{distance,jdbcType=DOUBLE},
      </if>
      <if test="checked != null">
        checked = #{checked,jdbcType=SMALLINT},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.diandian.model.Room">
    update room
    set rname = #{rname,jdbcType=VARCHAR},
      roomnumber = #{roomnumber,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      personcount = #{personcount,jdbcType=SMALLINT},
      distance = #{distance,jdbcType=DOUBLE},
      checked = #{checked,jdbcType=SMALLINT},
      note = #{note,jdbcType=VARCHAR},
      del = #{del,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>